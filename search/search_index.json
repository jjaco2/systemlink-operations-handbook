{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 The SystemLink Operations Handbook contains documentation, examples, and example config files for IT professionals to use when managing more advanced configurations of SystemLink Server . For information about how to install and use a SystemLink server, see the latest product manual on ni.com . Source and contributions for the handbook and example files can be found in the systemlink-operations-handbook GitHub repository . While the handbook is not specific to any version of SystemLink Server, the product continues to evolve over time. Some chapters or examples may specify a version or range of versions of SystemLink that they apply to.","title":"Introduction"},{"location":"#introduction","text":"The SystemLink Operations Handbook contains documentation, examples, and example config files for IT professionals to use when managing more advanced configurations of SystemLink Server . For information about how to install and use a SystemLink server, see the latest product manual on ni.com . Source and contributions for the handbook and example files can be found in the systemlink-operations-handbook GitHub repository . While the handbook is not specific to any version of SystemLink Server, the product continues to evolve over time. Some chapters or examples may specify a version or range of versions of SystemLink that they apply to.","title":"Introduction"},{"location":"openid-connect/openid-connect/","text":"Single Sign-on with OpenID Connect \u00b6 You can configure SystemLink to use OpenID Connect to authorize users. This enables SystemLink to use a common identity for users across multiple applications. This also means SystemLink leverages corporate single sign-on (SSO) and all its security benefits, such as streamlined login and limiting user credential proliferation. You can use OpenID Connect alongside or as a replacement for LDAP, Active Directory, and local Windows accounts for authentication. Assumptions and Prerequisites \u00b6 A server running SystemLink 2020R4 or greater. Refer to Installing and Configuring SystemLink Server and Clients for the basics of setting up a SystemLink server A DNS name for the SystemLink server SystemLink login with the Server Administrator role Administrator desktop access to the SystemLink server An OpenID Connect Provider server such as PingFederate , Azure ADFS , Okta , or another certified provider that has been fully setup and configured for OpenID Connect authentication Enabling OpenID Connect in SystemLink \u00b6 Log into the server running SystemLink and go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Add the configuration files to SystemLink to connect to your OpenID Connect provider. For details, refer to OpenID Configuration Files in SystemLink Server . Open NI Web Server Configuration . Go to the Authentication tab and enable Use OpenID Connect (advanced) . Click Apply and restart . Login into the SystemLink web application with a user assigned the Server Administrator role. Go to Security > Roles and click the gear icon in the top right. Add an OpenID Claim mapping for the Server Administrator role. For details, refer to Mapping OpenID Connect Claims to SystemLink Workspaces and Roles . Log out and log in as an OpenID connect user with a mapping for the Server Administrator role and confirm they have the correct privileges. Enable OpenID Connect in NI Web Server OpenID Configuration Files in SystemLink Server \u00b6 There are three files that you must create to connect your SystemLink server to an OpenID Connect provider: [provider-dns].conf , [provider-dns].client , and [provider-dns].provider . The [provider-dns] portion of each filename must be the URL-encoded fully qualified domain name. Refer to openid-connect-config for examples of each of these files. Example An OpenID provider with the DNS example.com:9999 would yield files named example.com%3a9999.conf , example.com%3a9999.client , and example.com%3a9999.provider . These files do not exist for new SystemLink installations. Add each file to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Restart the NI Web Server to apply changes. You can configure SystemLink to support multiple OpenID Connect providers simultaneously by creating a [provider-dns].conf , [provider-dns].client , and [provider-dns].provider file for each provider. The user ID in SystemLink must be unique across providers. This ID takes the form [sub_claim]@issuer . You can see the ID SystemLink associates with a user in the user details in SystemLink Security. SystemLink Login Window Configuration \u00b6 [provider-dns].conf describes the scopes SystemLink will request, and the text and icon for the provider login button. { \"scope\" : \"openid email profile\" , \"ni-attributes\" : { \"displayName\" : \"Log in with PingFederate\" , \"iconUri\" : \"/login/assets/pf.png\" } } In this example the openid , email , and profile scopes are requested. Additional scopes may be requested. Consult your provider's documentation regarding exposing scopes to clients. The profile and email scopes are required to populate first name, last name, and email fields in the SystemLink user preferences. These are derived from the given_name , family_name , and email claims respectively. Each scope contains claims you can map to roles within SystemLink workspaces. See Mapping OpenID Connect Claims to SystemLink Workspaces and Roles for details. The ni-attributes section determines the text and (optionally) an icon to be shown in the SystemLink login page. The iconUri is relative to htdocs directory ( C:\\Program Files\\National Instruments\\Shared\\Web Server\\htdocs ). This icon should be 16x16 px. SystemLink login windows with SSO login option. An icon has not been set in this example ClientID and Secret \u00b6 The [provider-dns].client file is used by the NI Web Server to authenticate with the provider. { \"client_id\" : \"slserver\" , \"client_secret\" : \"4vFm89u07xaredactedredactedredactede2tjtsEGQhlLreLVjcyLA0\" } The client_id and client_secret can be obtained from the provider. Depending on the provider the client_id may be user defined. ClientID and Secret Provider Documentation \u00b6 PingFederate - Configuring an OAuth Client Using OAuth 2.0 to Access Google APIs Okta - Find your Application's credentials ADFS - Build a server side application using OAuth confidential clients with AD FS 2016 or later OpenID Configuration and Discovery \u00b6 The [provider-dns].provider file includes the contents of the provider's OpenID Connect configuration. This file tells SystemLink which endpoints the provider exposes that are used during login. You may use curl to create this file. Replace [provider-dns] with the DNS of your OpenID Connect Provider. curl https:// [ provider-dns ] /.well-known/openid-configuration -o [ provider-dns ] .provider Setting Login Redirect URI \u00b6 The client configuration for your provider requires a redirect URL that is used during the login flow. This must be the fully qualified domain name, the protocol ( https:// or http:// ), and the port (if 80 or 443 are not used) of the SystemLink server. If the SystemLink server's DNS changes, update this setting with your provider. Note NI recommends the DNS name in the redirect URI match the the preferred hostname set in NI Web Server Configuration on the SystemLink server. The SystemLink login redirect URL \u00b6 Use the following URL to configure your provider: [protocol]://[systemlink-dns]/login/openidc-redirect Provider Client Configuration Documentation \u00b6 PingFederate - Configure an OAuth client Google - Using OAuth 2.0 for Web Server Applications Okta - Understand the callback route Supported Signing and Encryption Algorithms \u00b6 SystemLink supports the following algorithms for ID token signing, ID token key management encryption, and ID token content encryption. ID Token Signing Algorithm \u00b6 None ECDSA Using P256 Curve and SHA-256 ECDSA Using P384 Curve and SHA-384 ECDSA Using P521 Curve and SHA-512 HMAC using SHA-256 HMAC using SHA-384 HMAC using SHA-512 RSA using SHA-256 RSA using SHA-384 RSA using SHA-512 RSASSA-PSS using SHA-256 RSASSA-PSS using SHA-384 RSASSA-PSS using SHA-512 ID Token Key Management Encryption Algorithm \u00b6 No encryption Direct Encryption with symmetric key AES-128 Key Wrap AES-192 Key Wrap AES-256 Key Wrap ID Token Content Encryption Algorithm \u00b6 Composite AES-CBC-128 HMAC-SHA-256 Composite AES-CBC-192 HMAC-SHA-384 Composite AES-CBC-256 HMAC-SHA-512 Mapping OpenID Connect Claims to SystemLink Workspaces and Roles \u00b6 Map OpenID claims to roles and workspaces so users can access systems and data managed by SystemLink. This process is the same as the mapping workflow for LDAP and Active Directory attributes. Refer to Assigning Users to Roles in a Workspace in the SystemLink manual. You can also use claims to create a mapping for the Server Administrator role. Viewing Claims Returned by a Provider \u00b6 The OpenID Connect provider determines which scopes and claims clients can access. To see available claims, use the userinfo_endpoint hosted by the provider. Use https://[provider-dns]/.well-known/openid-configuration to determine the URL of the userinfo_endpoint . You will need to obtain a valid bearer token to authenticate and access this endpoint. Example curl request to return user info. The bearer token has been truncated for readability. curl -s https://slsso-runtime.grl-us1.uat.k8s.com/idp/userinfo.openid -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiI...zJVy2oLnrBmXTmpDRm499U4~' | python -m json.tool You can also view claims returned by a particular user by modifying the httpd configuration on your SystemLink server. Go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\defines.d\\ and open 50_mod_auth_openidc-defines.conf in a text editor. Change the configuration UnDefine AUTH_OIDC_ENABLE_CLAIM_INFO to Define AUTH_OIDC_ENABLE_CLAIM_INFO . Restart NI Web Server. Go to [protocol]://[systemlink-dns]/login/openidc-redirect?info=html or [protocol]://[systemlink-dns]/login/openidc-redirect?info=json to view user claims. An example 50_mod_auth_openidc-defines.conf modified to expose user claims. You must be logged via OpenID Connect to receive data this endpoint. # # Defined OpenID-Connect configuration for the Windows Apache installation. # # The name of the JSON map containing metadata about each identity provider. Define AUTH_OIDC_ATTRIBUTES_KEY ni-attributes # CA bundle to use when making requests to an identity provider. Define AUTH_OIDC_BUNDLE ../nicurl/ca-bundle.crt # Path to OIDC provider configuration. Define AUTH_OIDC_PROVIDER_DIR ${HTCONF_PATH}/openidc # The location to redirect when performing an OpenID-Connect login. Define AUTH_OIDC_REDIRECT_URI /login/openidc-redirect # # User-editable variables. # # Whether OIDC is enabled. Define AUTH_OIDC_ENABLED # When enabled, /login/openidc-redirect?info=json and # /login/openidc-redirect?info=html will return the claims for the currently # logged in user. Define AUTH_OIDC_ENABLE_CLAIM_INFO If the provider is https with a certificate signed by a CA not included in the NI-CURL CA bundle ( C:\\Program Files\\National Instruments\\Shared\\nicurl\\ca-bundle.crt ), then the AUTH_OIDC_PROVIDER_DIR define in 50_mod_auth_openidc-defines.conf must to be updated to point to a CA bundle containing the provider's CA. The path can be absolute, or relative to C:\\Program Files\\National Instruments\\Shared\\Web Server . Mapping Claims to SystemLink Roles \u00b6 Claims are returned as a JSON object. Example response from userinfo_endpoint . Use any of these claims to a map a user to a role in a workspace. { \"email\" : \"jane.doe@ni.com\" , \"family_name\" : \"Doe\" , \"given_name\" : \"Jane\" , \"name\" : \"Jane Doe\" , \"ni_employee\" : \"2670\" , \"sub\" : \"jdoe\" } Within the security UI the claim and its returned value can be mapped to a role within a Workspace. Mapping the ni_employee claim to a workspace. If the claim value is a scalar, then it must exactly match the value specified in the role mapping. If the claim value is an array, then one of the array elements must exactly match the value specified in the role mappings. If the claim value contains quotes the quotes must be escaped with \\. Example claim containing quotes { \"userinfo\" : { \"sub\" : \"88442211\" , \"country\" : \"US\" , \"name\" : \"Bob Smith\" , \"http://www.example.come/roles\" : [ \"user\" , \"a\\\"b\" ] } } Claims must be escaped with the \\ character. Refreshing user claims \u00b6 Claims are fetched at login. Log out and log back in for updated claims to affect role mappings. Troubleshooting Failed Authentication \u00b6 The following sources can be used to troubleshoot a failed connection. OpenID Connect Provider logs: Consult your OpenID Connect Provider's documentation on the location of their application log files. NI Web Server Logs: These are found at C:\\ProgramData\\National Instruments\\Web Server\\logs\\error.log . Note SystemLink uses log rotation therefore the latest logs may be in one of the numbered error.log files. Returned Claims: See Viewing Claims Returned by a Provider .","title":"Single Sign-on with OpenID Connect"},{"location":"openid-connect/openid-connect/#single-sign-on-with-openid-connect","text":"You can configure SystemLink to use OpenID Connect to authorize users. This enables SystemLink to use a common identity for users across multiple applications. This also means SystemLink leverages corporate single sign-on (SSO) and all its security benefits, such as streamlined login and limiting user credential proliferation. You can use OpenID Connect alongside or as a replacement for LDAP, Active Directory, and local Windows accounts for authentication.","title":"Single Sign-on with OpenID Connect"},{"location":"openid-connect/openid-connect/#assumptions-and-prerequisites","text":"A server running SystemLink 2020R4 or greater. Refer to Installing and Configuring SystemLink Server and Clients for the basics of setting up a SystemLink server A DNS name for the SystemLink server SystemLink login with the Server Administrator role Administrator desktop access to the SystemLink server An OpenID Connect Provider server such as PingFederate , Azure ADFS , Okta , or another certified provider that has been fully setup and configured for OpenID Connect authentication","title":"Assumptions and Prerequisites"},{"location":"openid-connect/openid-connect/#enabling-openid-connect-in-systemlink","text":"Log into the server running SystemLink and go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Add the configuration files to SystemLink to connect to your OpenID Connect provider. For details, refer to OpenID Configuration Files in SystemLink Server . Open NI Web Server Configuration . Go to the Authentication tab and enable Use OpenID Connect (advanced) . Click Apply and restart . Login into the SystemLink web application with a user assigned the Server Administrator role. Go to Security > Roles and click the gear icon in the top right. Add an OpenID Claim mapping for the Server Administrator role. For details, refer to Mapping OpenID Connect Claims to SystemLink Workspaces and Roles . Log out and log in as an OpenID connect user with a mapping for the Server Administrator role and confirm they have the correct privileges. Enable OpenID Connect in NI Web Server","title":"Enabling OpenID Connect in SystemLink"},{"location":"openid-connect/openid-connect/#openid-configuration-files-in-systemlink-server","text":"There are three files that you must create to connect your SystemLink server to an OpenID Connect provider: [provider-dns].conf , [provider-dns].client , and [provider-dns].provider . The [provider-dns] portion of each filename must be the URL-encoded fully qualified domain name. Refer to openid-connect-config for examples of each of these files. Example An OpenID provider with the DNS example.com:9999 would yield files named example.com%3a9999.conf , example.com%3a9999.client , and example.com%3a9999.provider . These files do not exist for new SystemLink installations. Add each file to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\openidc . Restart the NI Web Server to apply changes. You can configure SystemLink to support multiple OpenID Connect providers simultaneously by creating a [provider-dns].conf , [provider-dns].client , and [provider-dns].provider file for each provider. The user ID in SystemLink must be unique across providers. This ID takes the form [sub_claim]@issuer . You can see the ID SystemLink associates with a user in the user details in SystemLink Security.","title":"OpenID Configuration Files in SystemLink Server"},{"location":"openid-connect/openid-connect/#systemlink-login-window-configuration","text":"[provider-dns].conf describes the scopes SystemLink will request, and the text and icon for the provider login button. { \"scope\" : \"openid email profile\" , \"ni-attributes\" : { \"displayName\" : \"Log in with PingFederate\" , \"iconUri\" : \"/login/assets/pf.png\" } } In this example the openid , email , and profile scopes are requested. Additional scopes may be requested. Consult your provider's documentation regarding exposing scopes to clients. The profile and email scopes are required to populate first name, last name, and email fields in the SystemLink user preferences. These are derived from the given_name , family_name , and email claims respectively. Each scope contains claims you can map to roles within SystemLink workspaces. See Mapping OpenID Connect Claims to SystemLink Workspaces and Roles for details. The ni-attributes section determines the text and (optionally) an icon to be shown in the SystemLink login page. The iconUri is relative to htdocs directory ( C:\\Program Files\\National Instruments\\Shared\\Web Server\\htdocs ). This icon should be 16x16 px. SystemLink login windows with SSO login option. An icon has not been set in this example","title":"SystemLink Login Window Configuration"},{"location":"openid-connect/openid-connect/#clientid-and-secret","text":"The [provider-dns].client file is used by the NI Web Server to authenticate with the provider. { \"client_id\" : \"slserver\" , \"client_secret\" : \"4vFm89u07xaredactedredactedredactede2tjtsEGQhlLreLVjcyLA0\" } The client_id and client_secret can be obtained from the provider. Depending on the provider the client_id may be user defined.","title":"ClientID and Secret"},{"location":"openid-connect/openid-connect/#clientid-and-secret-provider-documentation","text":"PingFederate - Configuring an OAuth Client Using OAuth 2.0 to Access Google APIs Okta - Find your Application's credentials ADFS - Build a server side application using OAuth confidential clients with AD FS 2016 or later","title":"ClientID and Secret Provider Documentation"},{"location":"openid-connect/openid-connect/#openid-configuration-and-discovery","text":"The [provider-dns].provider file includes the contents of the provider's OpenID Connect configuration. This file tells SystemLink which endpoints the provider exposes that are used during login. You may use curl to create this file. Replace [provider-dns] with the DNS of your OpenID Connect Provider. curl https:// [ provider-dns ] /.well-known/openid-configuration -o [ provider-dns ] .provider","title":"OpenID Configuration and Discovery"},{"location":"openid-connect/openid-connect/#setting-login-redirect-uri","text":"The client configuration for your provider requires a redirect URL that is used during the login flow. This must be the fully qualified domain name, the protocol ( https:// or http:// ), and the port (if 80 or 443 are not used) of the SystemLink server. If the SystemLink server's DNS changes, update this setting with your provider. Note NI recommends the DNS name in the redirect URI match the the preferred hostname set in NI Web Server Configuration on the SystemLink server.","title":"Setting Login Redirect URI"},{"location":"openid-connect/openid-connect/#the-systemlink-login-redirect-url","text":"Use the following URL to configure your provider: [protocol]://[systemlink-dns]/login/openidc-redirect","title":"The SystemLink login redirect URL"},{"location":"openid-connect/openid-connect/#provider-client-configuration-documentation","text":"PingFederate - Configure an OAuth client Google - Using OAuth 2.0 for Web Server Applications Okta - Understand the callback route","title":"Provider Client Configuration Documentation"},{"location":"openid-connect/openid-connect/#supported-signing-and-encryption-algorithms","text":"SystemLink supports the following algorithms for ID token signing, ID token key management encryption, and ID token content encryption.","title":"Supported Signing and Encryption Algorithms"},{"location":"openid-connect/openid-connect/#id-token-signing-algorithm","text":"None ECDSA Using P256 Curve and SHA-256 ECDSA Using P384 Curve and SHA-384 ECDSA Using P521 Curve and SHA-512 HMAC using SHA-256 HMAC using SHA-384 HMAC using SHA-512 RSA using SHA-256 RSA using SHA-384 RSA using SHA-512 RSASSA-PSS using SHA-256 RSASSA-PSS using SHA-384 RSASSA-PSS using SHA-512","title":"ID Token Signing Algorithm"},{"location":"openid-connect/openid-connect/#id-token-key-management-encryption-algorithm","text":"No encryption Direct Encryption with symmetric key AES-128 Key Wrap AES-192 Key Wrap AES-256 Key Wrap","title":"ID Token Key Management Encryption Algorithm"},{"location":"openid-connect/openid-connect/#id-token-content-encryption-algorithm","text":"Composite AES-CBC-128 HMAC-SHA-256 Composite AES-CBC-192 HMAC-SHA-384 Composite AES-CBC-256 HMAC-SHA-512","title":"ID Token Content Encryption Algorithm"},{"location":"openid-connect/openid-connect/#mapping-openid-connect-claims-to-systemlink-workspaces-and-roles","text":"Map OpenID claims to roles and workspaces so users can access systems and data managed by SystemLink. This process is the same as the mapping workflow for LDAP and Active Directory attributes. Refer to Assigning Users to Roles in a Workspace in the SystemLink manual. You can also use claims to create a mapping for the Server Administrator role.","title":"Mapping OpenID Connect Claims to SystemLink Workspaces and Roles"},{"location":"openid-connect/openid-connect/#viewing-claims-returned-by-a-provider","text":"The OpenID Connect provider determines which scopes and claims clients can access. To see available claims, use the userinfo_endpoint hosted by the provider. Use https://[provider-dns]/.well-known/openid-configuration to determine the URL of the userinfo_endpoint . You will need to obtain a valid bearer token to authenticate and access this endpoint. Example curl request to return user info. The bearer token has been truncated for readability. curl -s https://slsso-runtime.grl-us1.uat.k8s.com/idp/userinfo.openid -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiI...zJVy2oLnrBmXTmpDRm499U4~' | python -m json.tool You can also view claims returned by a particular user by modifying the httpd configuration on your SystemLink server. Go to C:\\Program Files\\National Instruments\\Shared\\Web Server\\conf\\defines.d\\ and open 50_mod_auth_openidc-defines.conf in a text editor. Change the configuration UnDefine AUTH_OIDC_ENABLE_CLAIM_INFO to Define AUTH_OIDC_ENABLE_CLAIM_INFO . Restart NI Web Server. Go to [protocol]://[systemlink-dns]/login/openidc-redirect?info=html or [protocol]://[systemlink-dns]/login/openidc-redirect?info=json to view user claims. An example 50_mod_auth_openidc-defines.conf modified to expose user claims. You must be logged via OpenID Connect to receive data this endpoint. # # Defined OpenID-Connect configuration for the Windows Apache installation. # # The name of the JSON map containing metadata about each identity provider. Define AUTH_OIDC_ATTRIBUTES_KEY ni-attributes # CA bundle to use when making requests to an identity provider. Define AUTH_OIDC_BUNDLE ../nicurl/ca-bundle.crt # Path to OIDC provider configuration. Define AUTH_OIDC_PROVIDER_DIR ${HTCONF_PATH}/openidc # The location to redirect when performing an OpenID-Connect login. Define AUTH_OIDC_REDIRECT_URI /login/openidc-redirect # # User-editable variables. # # Whether OIDC is enabled. Define AUTH_OIDC_ENABLED # When enabled, /login/openidc-redirect?info=json and # /login/openidc-redirect?info=html will return the claims for the currently # logged in user. Define AUTH_OIDC_ENABLE_CLAIM_INFO If the provider is https with a certificate signed by a CA not included in the NI-CURL CA bundle ( C:\\Program Files\\National Instruments\\Shared\\nicurl\\ca-bundle.crt ), then the AUTH_OIDC_PROVIDER_DIR define in 50_mod_auth_openidc-defines.conf must to be updated to point to a CA bundle containing the provider's CA. The path can be absolute, or relative to C:\\Program Files\\National Instruments\\Shared\\Web Server .","title":"Viewing Claims Returned by a Provider"},{"location":"openid-connect/openid-connect/#mapping-claims-to-systemlink-roles","text":"Claims are returned as a JSON object. Example response from userinfo_endpoint . Use any of these claims to a map a user to a role in a workspace. { \"email\" : \"jane.doe@ni.com\" , \"family_name\" : \"Doe\" , \"given_name\" : \"Jane\" , \"name\" : \"Jane Doe\" , \"ni_employee\" : \"2670\" , \"sub\" : \"jdoe\" } Within the security UI the claim and its returned value can be mapped to a role within a Workspace. Mapping the ni_employee claim to a workspace. If the claim value is a scalar, then it must exactly match the value specified in the role mapping. If the claim value is an array, then one of the array elements must exactly match the value specified in the role mappings. If the claim value contains quotes the quotes must be escaped with \\. Example claim containing quotes { \"userinfo\" : { \"sub\" : \"88442211\" , \"country\" : \"US\" , \"name\" : \"Bob Smith\" , \"http://www.example.come/roles\" : [ \"user\" , \"a\\\"b\" ] } } Claims must be escaped with the \\ character.","title":"Mapping Claims to SystemLink Roles"},{"location":"openid-connect/openid-connect/#refreshing-user-claims","text":"Claims are fetched at login. Log out and log back in for updated claims to affect role mappings.","title":"Refreshing user claims"},{"location":"openid-connect/openid-connect/#troubleshooting-failed-authentication","text":"The following sources can be used to troubleshoot a failed connection. OpenID Connect Provider logs: Consult your OpenID Connect Provider's documentation on the location of their application log files. NI Web Server Logs: These are found at C:\\ProgramData\\National Instruments\\Web Server\\logs\\error.log . Note SystemLink uses log rotation therefore the latest logs may be in one of the numbered error.log files. Returned Claims: See Viewing Claims Returned by a Provider .","title":"Troubleshooting Failed Authentication"}]}